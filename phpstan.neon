parameters:
    level: 8
    paths:
        - src
        - tests
    
    # Exclude vendor and generated files
    excludePaths:
        - vendor/*
        - tests/fixtures/cassettes/*
    
    # Custom error patterns for financial SDK
    ignoreErrors:
        # PHPUnit mock objects have dynamic expects() method
        - '#Call to an undefined method .+Interface::expects\(\)\.#'
        
        # VCR library uses dynamic methods not visible to PHPStan
        - '#Call to static method .+ on an unknown class .+VCR\.#'
        - '#Static method VCR\\VCR::insertCassette\(\) invoked with 2 parameters, 1 required\.#'
        - '#Call to protected static method enableLibraryHooks\(\) of class VCR\\Videorecorder\.#'
        - '#Static method VCR\\Videorecorder::enableLibraryHooks\(\) invoked with 1 parameter, 0 required\.#'
        
        # VCR configuration parameter type mismatch  
        - '#Parameter \#1 \$paths of method VCR\\\\Configuration::setWhiteList\(\)#'
        - '#Parameter \#1 \$paths of method VCR\\Configuration::setWhiteList\(\)#'
        
        # Test helper methods that are dynamically created
        - '#Call to an undefined method .+::getResults\(\)\.#'
        - '#Call to an undefined method .+::getVatRate\(\)\.#'
        - '#Call to an undefined method .+::getConfiguration\(\)\.#'
        
        # BigDecimal toString method
        - '#Cannot call method __toString\(\) on string\.#'
        
        # Anonymous class return types in tests
        - '#Method class@anonymous/.+::getResults\(\) has no return type specified\.#'
        
        # Always true conditions from fault code checks (acceptable defensive programming)
        - '#If condition is always true\.#'
        
        # Reflection method access in tests
        - '#Cannot call method setAccessible\(\) on ReflectionMethod\|null\.#'
        - '#Cannot call method invoke\(\) on ReflectionMethod\|null\.#'
        
        # Test data type mismatches (acceptable in unit tests)
        - '#Parameter \#1 \$memberStates of class .+VatRatesRequest constructor expects array<string>, array<int, int> given\.#'
        - '#Parameter \#1 \$eventSubscribers .+ expects .+EventSubscriberInterface.+, array<int, stdClass> given\.#'
    
    # Strict rules for exception handling  
    checkGenericClassInNonGenericObjectType: true
    
    # Ensure proper type declarations
    reportUnmatchedIgnoredErrors: false
    
    # Bootstrap file for custom rules
    bootstrapFiles:
        - tests/bootstrap.php